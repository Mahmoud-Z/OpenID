@model OpenID.Classes.LoginViewModel

@*@using (Html.BeginForm("Login", "User", FormMethod.Post))
    {
        @Html.AntiForgeryToken()


        <div class="form-group">
            @Html.LabelFor(model => model.Username)
            @Html.TextBoxFor(model => model.Username, new { @class = "form-control" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password)
            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
        </div>

        <div>
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger">
                    <h4>Please correct the following errors:</h4>
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }
        </div>
        <button type="submit" class="btn btn-primary">Login</button>
    }*@

@if (Request.IsAuthenticated)
{
    using (Html.BeginForm("LogOff", "User", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()
        <ul class="nav navbar-nav navbar-right">
            <li>
                @Html.ActionLink("Claims", "Claims", "User", routeValues: null, htmlAttributes: new { title = "Claims" })
            </li>
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
        </ul>
    }
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li>@Html.ActionLink("Log in", "Loginn", "User", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
    <div>
        @if (ViewData.ModelState.Values.SelectMany(v => v.Errors).Count() !=0)
        {
            <div class="alert alert-danger">
                <h4>Please correct the following errors:</h4>
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }
    </div>
}